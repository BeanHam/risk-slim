size=size, alpha=0.7)
}
return(p)
}
vizMaskedMatrix(rf_result0, rf_result, metric="zScore", cutoff=1.96, order=FALSE)
vizMaskedMatrix(rf_result0, rf_result, metric="zScore", cutoff=1.96, order=TRUE)
vizMaskedMatrix(rf_result0, rf_result, metric="zScore", cutoff=2.58, order=TRUE)
# summary:
# returns:
#   ggplot object
vizMaskedMatrix <- function(result0, results, metric, cutoff, order, size=1){
mask = abs(metricMat(result0, results, metric=metric)) > cutoff
masked_mat = result0$fm
masked_mat[!mask] <- NA
diag(masked_mat) <- NA
if (order == FALSE){
p <- vizCoFreqMat(result0$fm, order=FALSE) +
geom_text(data = meltForViz(get_lower_tri(masked_mat)),
aes(label=signif(value,1)),
size=size, alpha=0.7)
} else {
hc <- cluster_mat(result0$fm)
masked_mat_ordered <- masked_mat[hc$order, hc$order]
p <- vizCoFreqMat(result0$fm, order=TRUE) +
geom_text(data = meltForViz(get_lower_tri(masked_mat_ordered)),
aes(label=signif(value,1)),
size=size, alpha=0.7)
}
return(p)
}
vizMaskedMatrix(rf_result0, rf_result, metric="zScore", cutoff=1.96, order=FALSE)
vizMaskedMatrix(rf_result0, rf_result, metric="zScore", cutoff=1.96, order=TRUE)
vizMaskedMatrix(rf_result0, rf_result, metric="zScore", cutoff=2.58, order=TRUE)
vizMaskedMatrix(rf_result0, rf_result, metric="pValue", cutoff=0.025, order=TRUE)
vizMaskedMatrix(rf_result0, rf_result, metric="pValue", cutoff=0.05, order=TRUE)
# summary:
# returns:
#   ggplot object
vizMaskedMatrix <- function(result0, results, metric, cutoff, order, size=1){
if (metric=="pValue"){
mask = abs(metricMat(result0, results, metric=metric)) < cutoff
} else if (metric=="zScore"){
mask = abs(metricMat(result0, results, metric=metric)) > cutoff
}
masked_mat = result0$fm
masked_mat[!mask] <- NA
diag(masked_mat) <- NA
if (order == FALSE){
p <- vizCoFreqMat(result0$fm, order=FALSE) +
geom_text(data = meltForViz(get_lower_tri(masked_mat)),
aes(label=signif(value,1)),
size=size, alpha=0.7)
} else {
hc <- cluster_mat(result0$fm)
masked_mat_ordered <- masked_mat[hc$order, hc$order]
p <- vizCoFreqMat(result0$fm, order=TRUE) +
geom_text(data = meltForViz(get_lower_tri(masked_mat_ordered)),
aes(label=signif(value,1)),
size=size, alpha=0.7)
}
return(p)
}
vizMaskedMatrix(rf_result0, rf_result, metric="zScore", cutoff=1.96, order=FALSE)
vizMaskedMatrix(rf_result0, rf_result, metric="zScore", cutoff=1.96, order=TRUE)
vizMaskedMatrix(rf_result0, rf_result, metric="zScore", cutoff=2.58, order=TRUE)
vizMaskedMatrix(rf_result0, rf_result, metric="pValue", cutoff=0.025, order=TRUE)
vizMaskedMatrix(rf_result0, rf_result, metric="pValue", cutoff=0.05, order=TRUE)
# summary:
# parameters:
#   result0 - list with fm and tot matrix
#   results - list of pairs of fm and tot matrices
#   metric - either "pValue" or "zScore"
#   cutoff - will be upper bound if using p-value and lower bound if using
#            z-score
#   order - boolean passed to vizCoFreqMat
#   size - text size
# returns:
#   ggplot object of the matrix
vizMaskedMatrix <- function(result0, results, metric, cutoff, order, size=1){
if (metric=="pValue"){
mask = abs(metricMat(result0, results, metric=metric)) < cutoff
} else if (metric=="zScore"){
mask = abs(metricMat(result0, results, metric=metric)) > cutoff
}
masked_mat = result0$fm
masked_mat[!mask] <- NA
diag(masked_mat) <- NA
if (order == FALSE){
p <- vizCoFreqMat(result0$fm, order=FALSE) +
geom_text(data = meltForViz(get_lower_tri(masked_mat)),
aes(label=signif(value,1)),
size=size, alpha=0.7)
} else {
hc <- cluster_mat(result0$fm)
masked_mat_ordered <- masked_mat[hc$order, hc$order]
p <- vizCoFreqMat(result0$fm, order=TRUE) +
geom_text(data = meltForViz(get_lower_tri(masked_mat_ordered)),
aes(label=signif(value,1)),
size=size, alpha=0.7)
}
return(p)
}
vizMaskedMatrix(rf_result0, rf_result, metric="zScore", cutoff=1.96, order=FALSE) +
labs(title="Random Forest (labelled if |Z|>1.96)")
vizMaskedMatrix(rf_result0, rf_result, metric="zScore", cutoff=2.58, order=TRUE) +
labs(title="Random Forest (labelled if |Z|>2.58)")
vizMaskedMatrix(rf_result0, rf_result, metric="pValue", cutoff=0.025, order=TRUE) +
labs(title="Random Forest (labelled if p<0.025")
vizMaskedMatrix(rf_result0, rf_result, metric="pValue", cutoff=0.05, order=TRUE) +
labs(title="Random Forest (labelled if p<0.05")
source('~/Desktop/thesis/ccfTrials.R')
vizMaskedMatrix(nr_result0, nr_result, metric="zScore", cutoff=1.96, order=FALSE) +
labs(title="Non-Random Forest (labelled if |Z|>1.96)")
vizMaskedMatrix(nr_result0, nr_result, metric="zScore", cutoff=2.58, order=TRUE) +
labs(title="Non-Random Forest (labelled if |Z|>2.58)")
vizMaskedMatrix(nr_result0, nr_result, metric="pValue", cutoff=0.025, order=TRUE) +
labs(title="Non-Random Forest (labelled if p<0.025")
vizMaskedMatrix(nr_result0, nr_result, metric="pValue", cutoff=0.05, order=TRUE) +
labs(title="Non-Random Forest (labelled if p<0.05")
val <- rf_result0$fm['M32','M46']
dist <- valueDist(rf_result, "M32", "M46")
zScore(value = rf_result0$fm['M32','M46'], valueDist(rf_result, "M32", "M46"))
zScore(rf_result0$fm["M32","M46"], valueDist(rf_result, "M32", "M46"))
pValue(rf_result0$fm["M32","M46"], valueDist(rf_result, "M32", "M46"))
plotLevelsDist(nr_result0,nr_result, "M32", "M46") + labs(x="Value from Non-Random Forest")
plotLevelsDist(rf_result0,rf_result, "M32", "M46") + labs(x="Value from Random Forest")
zScore(rf_result0$fm["M32","M46"], valueDist(rf_result, "M32", "M46"))
pValue(rf_result0$fm["M32","M46"], valueDist(rf_result, "M32", "M46"))
plotLevelsDist(nr_result0,nr_result, "M32", "M46") + labs(x="Value from Non-Random Forest")
plotLevelsDist(rf_result0,rf_result, "M32", "M46") + labs(x="Value from Random Forest")
vizMaskedMatrix(rf_result0, rf_result, metric="zScore", cutoff=1.96, order=FALSE) +
labs(title="Random Forest (labelled if |Z|>1.96)")
ggsave(filename = "../Images/matrix_realdata_ccfa_rf_z_1.96")
vizMaskedMatrix(rf_result0, rf_result, metric="zScore", cutoff=1.96, order=FALSE) +
labs(title="Random Forest (labelled if |Z|>1.96)")
ggsave(filename = "../Images/matrix_realdata_ccfa_rf_z_196")
?ggsave
source('~/Desktop/thesis/ccfTrials.R')
vizMaskedMatrix(rf_result0, rf_result, metric="zScore", cutoff=1.96, order=FALSE) +
labs(title="Random Forest (labelled if |Z|>1.96)")
ggsave(filename = "../Images/matrix_realdata_ccfa_rf_z_196")
source('~/Desktop/thesis/ccfTrials.R')
vizMaskedMatrix(rf_result0, rf_result, metric="zScore", cutoff=1.96, order=FALSE) +
labs(title="Random Forest (labelled if |Z|>1.96)")
ggsave(filename = "../Images/matrix_realdata_ccfa_rf_z_196.png")
vizMaskedMatrix(rf_result0, rf_result, metric="zScore", cutoff=2.58, order=TRUE) +
labs(title="Random Forest (labelled if |Z|>2.58)")
ggsave(filename = "../Images/matrix_realdata_ccfa_rf_z_258.png")
vizMaskedMatrix(rf_result0, rf_result, metric="pValue", cutoff=0.025, order=TRUE) +
labs(title="Random Forest (labelled if p<0.025")
ggsave(filename = "../Images/matrix_realdata_ccfa_rf_p_025.png")
vizMaskedMatrix(rf_result0, rf_result, metric="pValue", cutoff=0.05, order=TRUE) +
labs(title="Random Forest (labelled if p<0.05")
ggsave(filename = "../Images/matrix_realdata_ccfa_rf_p_05.png")
vizMaskedMatrix(nr_result0, nr_result, metric="zScore", cutoff=1.96, order=FALSE) +
labs(title="Non-Random Forest (labelled if |Z|>1.96)")
ggsave(filename = "../Images/matrix_realdata_ccfa_nr_z_196.png")
vizMaskedMatrix(nr_result0, nr_result, metric="zScore", cutoff=2.58, order=TRUE) +
labs(title="Non-Random Forest (labelled if |Z|>2.58)")
ggsave(filename = "../Images/matrix_realdata_ccfa_nr_z_258.png")
vizMaskedMatrix(nr_result0, nr_result, metric="pValue", cutoff=0.025, order=TRUE) +
labs(title="Non-Random Forest (labelled if p<0.025")
ggsave(filename = "../Images/matrix_realdata_ccfa_nr_p_025.png")
vizMaskedMatrix(nr_result0, nr_result, metric="pValue", cutoff=0.05, order=TRUE) +
labs(title="Non-Random Forest (labelled if p<0.05")
ggsave(filename = "../Images/matrix_realdata_ccfa_nr_p_05.png")
vizMaskedMatrix(rf_result0, rf_result, metric="zScore", cutoff=1.96, order=FALSE) +
labs(title="Random Forest (labelled if |Z|>1.96)")
ggsave(filename = "../Images/matrix_realdata_ccfa_rf_z_196.png")
vizMaskedMatrix(rf_result0, rf_result, metric="zScore", cutoff=2.58, order=TRUE) +
labs(title="Random Forest (labelled if |Z|>2.58)")
ggsave(filename = "../Images/matrix_realdata_ccfa_rf_z_258.png")
vizMaskedMatrix(rf_result0, rf_result, metric="pValue", cutoff=0.025, order=TRUE) +
labs(title="Random Forest (labelled if p<0.025)")
ggsave(filename = "../Images/matrix_realdata_ccfa_rf_p_025.png")
vizMaskedMatrix(rf_result0, rf_result, metric="pValue", cutoff=0.05, order=TRUE) +
labs(title="Random Forest (labelled if p<0.05)")
ggsave(filename = "../Images/matrix_realdata_ccfa_rf_p_05.png")
vizMaskedMatrix(nr_result0, nr_result, metric="zScore", cutoff=1.96, order=FALSE) +
labs(title="Non-Random Forest (labelled if |Z|>1.96)")
ggsave(filename = "../Images/matrix_realdata_ccfa_nr_z_196.png")
vizMaskedMatrix(nr_result0, nr_result, metric="zScore", cutoff=2.58, order=TRUE) +
labs(title="Non-Random Forest (labelled if |Z|>2.58)")
ggsave(filename = "../Images/matrix_realdata_ccfa_nr_z_258.png")
vizMaskedMatrix(nr_result0, nr_result, metric="pValue", cutoff=0.025, order=TRUE) +
labs(title="Non-Random Forest (labelled if p<0.025)")
ggsave(filename = "../Images/matrix_realdata_ccfa_nr_p_025.png")
vizMaskedMatrix(nr_result0, nr_result, metric="pValue", cutoff=0.05, order=TRUE) +
labs(title="Non-Random Forest (labelled if p<0.05)")
ggsave(filename = "../Images/matrix_realdata_ccfa_nr_p_05.png")
vizMaskedMatrix(rf_result0, rf_result, metric="zScore", cutoff=1.96, order=TRUE) +
labs(title="Random Forest (labelled if |Z|>1.96)")
ggsave(filename = "../Images/matrix_realdata_ccfa_rf_z_196.png")
vizMaskedMatrix(rf_result0, rf_result, metric="zScore", cutoff=2.58, order=TRUE) +
labs(title="Random Forest (labelled if |Z|>2.58)")
ggsave(filename = "../Images/matrix_realdata_ccfa_rf_z_258.png")
vizMaskedMatrix(rf_result0, rf_result, metric="pValue", cutoff=0.025, order=TRUE) +
labs(title="Random Forest (labelled if p<0.025)")
ggsave(filename = "../Images/matrix_realdata_ccfa_rf_p_025.png")
vizMaskedMatrix(rf_result0, rf_result, metric="pValue", cutoff=0.05, order=TRUE) +
labs(title="Random Forest (labelled if p<0.05)")
ggsave(filename = "../Images/matrix_realdata_ccfa_rf_p_05.png")
vizMaskedMatrix(nr_result0, nr_result, metric="zScore", cutoff=1.96, order=TRUE) +
labs(title="Non-Random Forest (labelled if |Z|>1.96)")
ggsave(filename = "../Images/matrix_realdata_ccfa_nr_z_196.png")
vizMaskedMatrix(nr_result0, nr_result, metric="zScore", cutoff=2.58, order=TRUE) +
labs(title="Non-Random Forest (labelled if |Z|>2.58)")
ggsave(filename = "../Images/matrix_realdata_ccfa_nr_z_258.png")
vizMaskedMatrix(nr_result0, nr_result, metric="pValue", cutoff=0.025, order=TRUE) +
labs(title="Non-Random Forest (labelled if p<0.025)")
ggsave(filename = "../Images/matrix_realdata_ccfa_nr_p_025.png")
vizMaskedMatrix(nr_result0, nr_result, metric="pValue", cutoff=0.05, order=TRUE) +
labs(title="Non-Random Forest (labelled if p<0.05)")
ggsave(filename = "../Images/matrix_realdata_ccfa_nr_p_05.png")
p <- 0.05/561
qnorm(1-p/2)
mt = getMaskedMat(rf_result0, rf_result, metric="zScore", cutoff=abs(qnorm(0.025/561)))
source('~/Desktop/thesis/ccfTrials.R')
source('~/Desktop/thesis/ccfAnalysis.R')
mt = getMaskedMat(rf_result0, rf_result, metric="zScore", cutoff=abs(qnorm(0.025/561)))
mt = getMaskedMat(rf_result0, rf_result, metric="zScore", cutoff=abs(qnorm(0.025/561)))
mt2 <- reorder_mat(mt)
vizCoFreqMat(mt2, order=FALSE)
mt = getMaskedMat(rf_result0, rf_result, metric="zScore", cutoff=abs(qnorm(0.025/561)))
hc0 <- cluster_mat(mt, verbose=FALSE, na.value=0)
plot(hc0,main="Clustering after Bonferroni Correction (NA<-0)")
hc <- cluster_mat(mt, verbose=FALSE, na.value=0.5)
plot(hc,main="Clustering after Bonferroni Correction (NA<-0.5)")
#png(filename="../Images/dend_realdata_rf_z_95bonf.png")
#plot(hc,main="Clustering after Bonferroni Correction")
#dev.off()
fviz_dend(hc, cex = 0.5, k = 21, color_labels_by_k = FALSE) +
labs(title="", y="") + theme_void()
setwd("~/Desktop/thesis/CCFA")
source("../ccfAnalysis.R")
source("../ccfTrials.R")
major_key = read.csv("major_key.csv")
# for dendrogram plotting
library("ape")
library("ggdendro")
# dendrogram
source("http://addictedtor.free.fr/packages/A2R/lastVersion/R/code.R")
library(factoextra) #http://www.sthda.com/english/rpkgs/factoextra/reference/fviz_dend.html
files = c(list.files(path="./major_nr_run_in_parallel", pattern = "", full.names = TRUE))
for (f in files){
print(f)
load(f)
}
nr_result0 <- results51[[1]]
nr_result <- results51[2:length(results51)]
for (item in list(results101, results201, results301, results401, results501)) {
nr_result <- append(nr_result, item)
}
files = c(list.files(path="./major_rf_run_in_parallel",pattern = "",
full.names = TRUE))
for (f in files){
print(f)
load(f)
}
rf_result0 <- results101[[1]]
results401 <- results401[1:100]
results501 <- results501[1:100]
rf_result <- results101[2:length(results101)]
for (item in list(results201, results301, results401, results501)) {
rf_result <- append(rf_result, item)
}
vizMaskedMatrix(rf_result0, rf_result, metric="zScore", cutoff=abs(qnorm(0.025/561)), order=TRUE) +
labs(title="Random Forest (labelled if |Z|>3.92)")
ggsave(filename = "../Images/matrix_realdata_ccfa_rf_z_95bonf.png")
vizMaskedMatrix(nr_result0, nr_result, metric="zScore", cutoff=abs(qnorm(0.025/561)), order=TRUE) +
labs(title="Non-Random Forest (labelled if |Z|>3.92)")
ggsave(filename = "../Images/matrix_realdata_ccfa_nr_z_95bonf.png")
files = c(list.files(path="./major_nr_run_in_parallel", pattern = "", full.names = TRUE))
for (f in files){
print(f)
load(f)
}
nr_result0 <- results51[[1]]
nr_result <- results51[2:length(results51)]
for (item in list(results101, results201, results301, results401, results501)) {
nr_result <- append(nr_result, item)
}
load("./major_nr_51_results")
load("./major_nr_51_totals")
nr_result0 <- list(fm=major_nr_results[[1]],
tot=major_nr_totals[[1]])
files = c(list.files(path="./major_rf_run_in_parallel",pattern = "",
full.names = TRUE))
for (f in files){
print(f)
load(f)
}
rf_result0 <- results101[[1]]
results401 <- results401[1:100]
results501 <- results501[1:100]
rf_result <- results101[2:length(results101)]
for (item in list(results201, results301, results401, results501)) {
rf_result <- append(rf_result, item)
}
vizCoFreqMat(nr_result0$fm,order=FALSE) + geom_text(size=1, alpha=0.7) +
labs(title="Non-Random Forest")
#ggsave(filename="../Images/matrix_realdata_ccfa_nr.png")
vizCoFreqMat(rf_result0$fm,order=FALSE) + geom_text(size=1, alpha=0.7) +
labs(title="Random Forest")
#ggsave(filename="../Images/matrix_realdata_ccfa_rf.png")
vizMaskedMatrix(rf_result0, rf_result, metric="zScore", cutoff=abs(qnorm(0.025/561)), order=TRUE) +
labs(title="Random Forest (labelled if |Z|>3.92)")
ggsave(filename = "../Images/matrix_realdata_ccfa_rf_z_95bonf.png")
vizMaskedMatrix(nr_result0, nr_result, metric="zScore", cutoff=abs(qnorm(0.025/561)), order=TRUE) +
labs(title="Non-Random Forest (labelled if |Z|>3.92)")
ggsave(filename = "../Images/matrix_realdata_ccfa_nr_z_95bonf.png")
mt = getMaskedMat(rf_result0, rf_result, metric="zScore", cutoff=abs(qnorm(0.025/561)))
mt2 <- reorder_mat(mt)
vizCoFreqMat(mt2, order=FALSE)
mt2
mt = getMaskedMat(rf_result0, rf_result, metric="zScore", cutoff=abs(qnorm(0.025/561)))
mt2 <- reorder_mat(mt)
mt2[is.na(mt2)] <- 0.5
vizCoFreqMat(mt2, order=FALSE)
mt = getMaskedMat(rf_result0, rf_result, metric="zScore", cutoff=abs(qnorm(0.025/561)))
mt2 <- reorder_mat(mt)
mt2[is.na(mt2)] <- 0.5
vizCoFreqMat(mt2, order=FALSE) + theme_classic()
mt = getMaskedMat(rf_result0, rf_result, metric="zScore", cutoff=abs(qnorm(0.025/561)))
mt2 <- reorder_mat(mt)
mt2[is.na(mt2)] <- 0.5
vizCoFreqMat(mt2, order=FALSE) + theme_grey()
mt = getMaskedMat(rf_result0, rf_result, metric="zScore", cutoff=abs(qnorm(0.025/561)))
mt2 <- reorder_mat(mt)
mt2[is.na(mt2)] <- 0.5
vizCoFreqMat(mt2, order=FALSE)
mt = getMaskedMat(rf_result0, rf_result, metric="zScore", cutoff=abs(qnorm(0.025/561)))
mt2 <- reorder_mat(mt)
mt2[is.na(mt2)] <- 0.5
vizCoFreqMat(mt2, order=FALSE) + geom_text(size=1, alpha=0.7)
mt
source('~/Desktop/thesis/ccfAnalysis.R')
sqrt(11)
11-3
8/11
(8/11)^11
pwd
load(file="./CCFA/official_grouping")
official_grouping
setwd("~/Desktop/risk-slim/examples")
spam = read.csv("./data/spambase_data.csv")
coefs = c(0.,  0.,  0.,  0.,  0.,  0.,  0.,  2.,  0.,  0.,  0.,  0.,  0.,
0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  5.,  0.,  0.,
-5., -5.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
0.,  0.,  0.,  0.,  0.,  0.,  0., -4.,  0.,  0.,  0.,  0.,  0.,
0.,  0.,  0.,  0.,  0.,  0.)
head(spam)
ncol(spam)
length(coefs)
names(spam)
spam[,2:length(coefs)]*coefs[2:length(coefs)]
rowSums(spam[,2:length(coefs)]*coefs[2:length(coefs)])
nrow(spam)
coefs = c(0.,  0.,  0.,  0.,  0.,  0.,  0.,  2.,  0.,  0.,  0.,  0.,  0.,
0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  5.,  0.,  0.,
-5., -5.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
0.,  0.,  0.,  0.,  0.,  0.,  0., -4.,  0.,  0.,  0.,  0.,  0.,
0.,  0.,  0.,  0.,  0.,  0.)
scores = rowSums(spam[,2:length(coefs)]*coefs[2:length(coefs)])
scores
sign(scores)
nrow(spam)
table(sign(scores))
table(spam$Spam)
scores[spam$Spam == 1]
sign(scores[spam$Spam == 1])
sign(scores[spam$Spam == 1]) == 1
sum(sign(scores[spam$Spam == 1]) == 1)
sum(sign(scores[spam$Spam == 1]) >= 0)
1054+67+2721+759
sum(sign(scores[spam$Spam == 1]) == -1)
table(sign(scores[spam$Spam == 1]))
# positive examples
table(sign(scores[spam$Spam == 1]))
# negative examples
table(sign(scores[spam$Spam == 0]))
which(spam$Spam == 1)
scores = sign(rowSums(spam[,2:length(coefs)]*coefs[2:length(coefs)]))
scores
pos_ind = which(spam$Spam == 1)
sum(scores[pos_ind] == 1)
pos_ind = which(spam$Spam == 1)
sum(scores[pos_ind] == 1)
sum(scores[!pos_ind] == 1)
sum(scores[!pos_ind] != 1)
sum(scores[pos_ind] != 1)
# positive examples
table(sign(scores[spam$Spam == 1]))
# negative examples
table(sign(scores[spam$Spam == 0]))
scores[!pos_ind]
socres
scores
pos_ind
pos_ind = spam$Spam == 1
sum(scores[pos_ind] == 1)
sum(scores[!pos_ind] == 1)
sum(scores[!pos_ind] != 1)
sum(scores[pos_ind] != 1)
# positive examples
table(sign(scores[spam$Spam == 1]))
# negative examples
table(sign(scores[spam$Spam == 0]))
head(spam$Spam)
coefs = c(0.,  0.,  0.,  0.,  0.,  0.,  0.,  4.,  0.,  0.,  0.,  0.,  0.,
0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -2.,
0., -5.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
0.,  5.,  0.,  0.,  0.,  0)
scores = sign(rowSums(spam[,2:length(coefs)]*coefs[2:length(coefs)]))
scores
head(scores)
ncol(spam)
spam[,2:length(coefs)] %*% coefs[2:length(coefs)]
as.matrix(spam[,2:length(coefs)]) %*% as.matrix(coefs[2:length(coefs)])
sign(as.matrix(spam[,2:length(coefs)]) %*% as.matrix(coefs[2:length(coefs)]))
head(sign(as.matrix(spam[,2:length(coefs)]) %*% as.matrix(coefs[2:length(coefs)])))
coefs = c(0.,  0.,  0.,  0.,  0.,  0.,  0.,  4.,  0.,  0.,  0.,  0.,  0.,
0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -2.,
0., -5.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
0.,  5.,  0.,  0.,  0.,  0)
#scores = sign(rowSums(spam[,2:length(coefs)]*coefs[2:length(coefs)]))
scores = sign(as.matrix(spam[,2:length(coefs)]) %*% as.matrix(coefs[2:length(coefs)])))
coefs = c(0.,  0.,  0.,  0.,  0.,  0.,  0.,  4.,  0.,  0.,  0.,  0.,  0.,
0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -2.,
0., -5.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
0.,  5.,  0.,  0.,  0.,  0)
#scores = sign(rowSums(spam[,2:length(coefs)]*coefs[2:length(coefs)]))
scores = sign(as.matrix(spam[,2:length(coefs)]) %*% as.matrix(coefs[2:length(coefs)]))
pos_ind = spam$Spam == 1
sum(scores[pos_ind] == 1)
sum(scores[!pos_ind] == 1)
sum(scores[!pos_ind] != 1)
sum(scores[pos_ind] != 1)
# positive examples
table(sign(scores[spam$Spam == 1]))
# negative examples
table(sign(scores[spam$Spam == 0]))
pos_ind = spam$Spam == 1
sum(scores[pos_ind] == 1)
sum(scores[!pos_ind] == 1)
sum(scores[!pos_ind] != 1)
sum(scores[pos_ind] != 1)
# positive examples
table(sign(scores[spam$Spam == 1]))
# negative examples
table(sign(scores[spam$Spam == 0]))
1339+98+2690+474
m1 = c(1,2,3)
m2 = data.frame(x1=c(0,1), x2=c(1,1), x3=c(0,1))
m1
m2
coefs
dim(coefs)
dim(spam)
m1*m2
m1 %*% m2
c(1,1,1)*m2
c(2,2,2)*m2
c(2,2,1)*m2
c(2,1)*m2
spam = read.csv("./data/spambase_data.csv")
source("/Users/Hallee/Desktop/thesis/roc.R")
as.matrix(spam[,2:length(coefs)]) %*% as.matrix(coefs[2:length(coefs)])
c(as.matrix(spam[,2:length(coefs)]) %*% as.matrix(coefs[2:length(coefs)]))
1/(1 + exp(c(as.matrix(spam[,2:length(coefs)]) %*% as.matrix(coefs[2:length(coefs)]))))
probs = 1/(1 + exp(c(as.matrix(spam[,2:length(coefs)]) %*% as.matrix(coefs[2:length(coefs)]))))
probs = 1/(1 + exp(c(as.matrix(spam[,2:length(coefs)]) %*% as.matrix(coefs[2:length(coefs)]))))
hist(probs)
probs = 1/(1 + exp(c(as.matrix(spam[,2:length(coefs)]) %*% as.matrix(coefs[2:length(coefs)]))))
hist(probs)
getROC(probs, spam$Spam)
probs = 1/(1 + exp(-c(as.matrix(spam[,2:length(coefs)]) %*% as.matrix(coefs[2:length(coefs)]))))
hist(probs)
getROC(probs, spam$Spam)
probs = 1/(1 + exp(-c(as.matrix(spam[,2:length(coefs)]) %*% as.matrix(coefs[2:length(coefs)]))))
hist(probs)
getROC(probs, spam$Spam)
plotOnePredvsObs(probs, spam$Spam)
m1 = c(1,2,3)
m2 = data.frame(x1=c(0,1), x2=c(1,1), x3=c(0,1))
m1 = c(1,2,3)
m2 = data.frame(x1=c(0,1), x2=c(1,1), x3=c(0,1))
m1*m2
m1 = c('x','y','c')
m2 = data.frame(x1=c(0,1), x2=c(1,1), x3=c(0,1))
m1*m2
m1 = c(1,3,5)
m2 = data.frame(x1=c(0,1), x2=c(1,1), x3=c(0,1))
m1*m2
m1 = c(1,3)
m2 = data.frame(x1=c(0,1), x2=c(1,1), x3=c(0,1))
m1*m2
m1 = c(1,3)
m2 = data.frame(x1=c(0,1), x2=c(1,1), x3=c(2,1))
m1*m2
m1 = c(1,3)
m2 = data.frame(x1=c(0,1), x2=c(1,1), x3=c(0,1))
m1*m2
m1 = c(1,3)
m2 = data.frame(x1=c(0,1), x2=c(1,1), x3=c(0,1))
m1*m2
m2*m1
spam = read.csv("./data/spambase_data.csv")
source("/Users/Hallee/Desktop/thesis/roc.R")
